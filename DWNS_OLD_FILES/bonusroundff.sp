/* Plugin Template generated by Pawn Studio */

#pragma semicolon 1

#include <sourcemod>
#include <tf2_stocks>

#define PLUGIN_VERSION "1.0"

new Roundstarts;
new Handle:mp_bonusroundtime;
new bool:Instaspawn = false;

public Plugin:myinfo = 
{
	name = "FF Bonus Round",
	author = "DWN",
	description = "Turns FF on during bonus round",
	version = PLUGIN_VERSION,
	url = "http://www.topnotchclan.com"
}

public OnPluginStart()
{
	HookEvent("teamplay_round_win", HookRoundEnd, EventHookMode_Post);
	HookEvent("teamplay_round_start", HookRoundStart, EventHookMode_Post);
	HookEvent("player_death", Event_PlayerDeath, EventHookMode_Pre);
	HookEvent("player_death", hook_Death, EventHookMode_Pre);
	SetCommandFlags("mp_friendlyfire", GetCommandFlags("mp_friendlyfire") & ~FCVAR_NOTIFY);
	mp_bonusroundtime = FindConVar("mp_bonusroundtime");
	SetConVarBounds(mp_bonusroundtime, ConVarBound_Upper, false);
}

public OnConfigsExecuted()
{
	SetConVarInt(mp_bonusroundtime, 30);
}

public OnMapStart()
{
	Roundstarts = 0;
	Instaspawn = false;
}

public HookRoundEnd(Handle:event, const String:name[], bool:dontBroadcast) {
	CreateTimer(12.0, FF_ON, _, TIMER_FLAG_NO_MAPCHANGE);
}

public Action:hook_Death(Handle:event, const String:name[], bool:dontBroadcast) {
	if (Instaspawn == true)
	{
		return Plugin_Handled;
	}
	return Plugin_Continue;
}

public Action:FF_ON(Handle:timer, any:client) {
	ServerCommand("mp_friendlyfire 1");
	Instaspawn = true;
	PrintToChatAll("\x03Bonus Round Friendly Fire Is Now Active!");
	for (new i = 1; i <= MaxClients; i++) 
		{
			if (!IsPlayerAlive(i) && IsClientConnected(i) && IsClientInGame(i) && !IsFakeClient(i))
			{
				//CreateTimer(0.1, Timer_Respawn, client);
				TF2_RespawnPlayer(i);
			}
		}
}
	
public HookRoundStart(Handle:event, const String:name[], bool:dontBroadcast) {
	if (Roundstarts){
		ServerCommand("mp_friendlyfire 0");
		Instaspawn = false;
	}
		
	Roundstarts++;
}

public Action:Event_PlayerDeath(Handle:event, const String:name[], bool:dontBroadcast) {
	new client = GetClientOfUserId(GetEventInt(event, "userid"));
	CreateTimer(0.1, Timer_Respawn, client);
	return Plugin_Continue;
}

public Action:Timer_Respawn(Handle:timer, any:client) {
	if (Instaspawn && IsClientConnected(client) && IsClientInGame(client) && !IsFakeClient(client)) {
		if (!IsFakeClient(client))
			TF2_RespawnPlayer(client);
	}
}